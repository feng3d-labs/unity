{
    "compilerOptions": {
        "target": "ES5",
        "noImplicitAny": false,
        "sourceMap": true,
        "declarationMap": true,
        "declaration": true,
        "composite": true,
        "experimentalDecorators": true,
        "lib": [
            "ES2015",
            "DOM",
        ],
        "outFile": "out/unity.js",
    },
    "references": [
        {
            "path": "../feng3d",
        },
    ],
    "files": [
        //
        "src/enums/AvatarTarget.ts",
        "src/enums/AvatarIKHint.ts",
        "src/enums/AvatarIKGoal.ts",
        "src/enums/HumanBodyBones.ts",
        "src/enums/SendMessageOptions.ts",
        //
        "src/base/Bounds.ts",
        //
        "src/core/BoneWeight.ts",
        "src/core/Mesh.ts",
        //
        "src/core/Avatar.ts",
        "src/core/Animator.ts",
        //
        "src/animation/enums/AnimatorRecorderMode.ts",
        "src/animation/enums/AnimatorUpdateMode.ts",
        "src/animation/enums/AnimatorCullingMode.ts",
        "src/animation/enums/AnimatorControllerParameterType.ts",
        "src/animation/enums/AnimationBlendMode.ts",
        //
        "src/animation/MatchTargetWeightMask.ts",
        "src/animation/AnimationEvent.ts",
        "src/animation/StateMachineBehaviour.ts",
        "src/animation/AnimatorStateInfo.ts",
        "src/animation/AnimatorClipInfo.ts",
        "src/animation/AnimationState.ts",
        "src/animation/AnimationClip.ts",
        "src/animation/RuntimeAnimatorController.ts",
        "src/animation/AnimatorControllerParameter.ts",
        "src/animation/EditorCurveBinding.ts",
        //
        "src/playables/PlayableGraph.ts",
        //
        "src/shaders/Line_Trail.vertex.glsl.ts",
        "src/shaders/Line_Trail.fragment.glsl.ts",
        "src/shaders/Line_Trail.shader.ts",
        //
        "src/effects/enums/LineAlignment.ts",
        "src/effects/enums/LineTextureMode.ts",
        "src/effects/LineRenderer.ts",
        "src/effects/TrailRenderer.ts",
        //
        "src/shaders/TransparentParticlesStandard.vertex.glsl.ts",
        "src/shaders/TransparentParticlesStandard.fragment.glsl.ts",
        "src/shaders/TransparentParticlesStandard.shader.ts",
    ]
}